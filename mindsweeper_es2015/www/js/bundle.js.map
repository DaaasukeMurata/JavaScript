{"version":3,"sources":["webpack:///webpack/bootstrap e9033a854ac99f1cbfc0","webpack:///./entry.js","webpack:///./table.js","webpack:///./cell.js","webpack:///./panel.js","webpack:///./value.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;AC1D0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC,0BAA0B,aAAa;AACvC,iCAAiC;AACjC,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,C;;;;;;;AC5JA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e9033a854ac99f1cbfc0","import Table from \"./table.js\";\nimport Panel from \"./panel.js\";\nimport * as Values from \"./value.js\";\n\nclass MindSweeper {\n  constructor() {\n    // const canvas = document.querySelector(\"#canvas\");\n    // const message = document.querySelector(\"#message\");\n    // const resetButton = document.querySelector(\"#reset\");\n    const canvas = document.getElementById(\"canvas\");\n    const message = document.getElementById(\"message\");\n    const resetButton = document.getElementById(\"reset\");\n\n    this.panel = new Panel(canvas);\n    this.table = null;\n    this.panel.setCanvasSize(Values.PANEL_WIDTH, Values.PANEL_HEIGHT);\n    this.panel.setActionListener((status, data) => {\n      if (status == \"clicked\") {\n        const [i, j] = data;\n        if (i != null && j != null) {\n          this.table.turnAt(i, j);\n          this.panel.paint();\n\n          // game clear or game over 判定\n          if (this.table.isGameclear()) {\n            message.innerHTML = \"Game Clear\";\n            this.panel.stopInputListeners();\n          } else if (this.table.isGameover()) {\n            message.innerHTML = \"Game Over\";\n            this.panel.stopInputListeners();\n          }\n        }\n      } else if (status == \"rightClicked\") {\n        const [i, j] = data;\n        this.table.flagAt(i, j);\n        this.panel.paint();\n      }\n    });\n\n    resetButton.addEventListener(\"click\", () => {\n      message.innerHTML = \"\";\n      this.initGame();\n    }, false);\n\n  }\n\n  initGame() {\n    this.table = new Table(Values.TABLE_COLS, Values.TABLE_ROWS);\n    this.table.setRandomBombs(Values.NUM_BOMBS);\n    this.panel.setTable(this.table);\n    this.panel.paint();\n    if (!this.panel.isListening) {\n      this.panel.startInputListeners();\n    }\n  }\n}\n\nconst mindSweeper = new MindSweeper();\nmindSweeper.initGame();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./entry.js\n// module id = 0\n// module chunks = 0","import Cell from \"./cell\";  // defaultでexportしたclassに、”Cell\"という名前をつける\n\nexport default class {\n  constructor(cols, rows) {\n    this.cols = cols;\n    this.rows = rows;\n    this.clear();\n  }\n\n  // 全cellをfalseで初期化\n  clear() {\n    this.array = [];\n    for (let j = 0; j < this.rows; j++) {\n      for (let i = 0; i < this.cols; i++) {\n        this.array[j * this.cols + i] = new Cell(false, false, false);\n      }\n    }\n  }\n\n  // i行j列のCell取得\n  getAt(i, j) {\n    return this.array[j * this.cols + i];\n  }\n\n  // Bombの配置\n  setRandomBombs(n) {\n    let k = 0;\n    while (k < n) {\n      const i = Math.floor(Math.random() * this.cols);  // Math.floor()は小数点切り下げ\n      const j = Math.floor(Math.random() * this.rows);\n      const cell = this.getAt(i, j);\n      if (!cell.isBomb) {\n        cell.isBomb = true;\n        k += 1;\n      }\n    }\n  }\n\n  // 周りのBombの数を返す\n  countNeighborBombs(i, j) {\n    const positions = this.neighboarPositions(i, j);\n    let num = 0;\n    for (let k = 0; k < positions.length; k++) {\n      const position = positions[k];\n      const cell = this.getAt(position.i, position.j);\n      if (cell.isBomb) {\n        num += 1;\n      }\n    }\n    return num;\n  }\n\n  // 周囲のマスをリストで返す\n  neighboarPositions(i, j) {\n    const min_i = Math.max(i - 1, 0);\n    const max_i = Math.min(i + 1, this.cols - 1);\n    const min_j = Math.max(j - 1, 0);\n    const max_j = Math.min(j + 1, this.rows - 1);\n    let list = [];\n    for (let jj = min_j; jj <= max_j; jj++) {\n      for (let ii = min_i; ii <= max_i; ii++) {\n        if (i != ii || j != jj) {   // clickされたマスを除く\n          list.push({ i: ii, j: jj });\n        }\n      }\n    }\n    return list;\n  }\n\n  // OpenCell\n  turnAt(i, j) {\n    const cell = this.getAt(i, j);\n    if (cell.isOpen) {\n      return;\n    }\n\n    cell.isFlagged = false;\n    cell.isOpen = true;\n    if (cell.isBomb) {\n      return; // gameover\n    }\n\n    // 周りにbombsがない場合、周辺まで開ける\n    const bombsNum = this.countNeighborBombs(i, j);\n    if (bombsNum == 0) {\n      const positions = this.neighboarPositions(i, j);\n      for (let k = 0; k < positions.length; k++) {\n        const position = positions[k];\n        this.turnAt(position.i, position.j);\n      }\n    }\n  }\n\n  // トグルでflagを立てる\n  flagAt(i, j) {\n    let cell = this.getAt(i, j);\n    if (!cell.isOpen) {\n      cell.isFlagged = !cell.isFlagged;\n    }\n  }\n\n  // GameClear判定\n  isGameclear() {\n    const n = this.reduce((n, cell) => {\n      if (cell.isBomb || cell.isOpen) {\n        return n + 1;\n      }\n      return n;\n    }, 0);\n    // すべてのcellがOpened or Bombの場合、GameClear(trueを返却)\n    return n == this.rows * this.cols;\n  }\n\n  // GameOver判定\n  isGameover() {\n    const f = this.reduce((f, cell) => {\n      if (!f && cell.isOpen && cell.isBomb) {\n        return true;\n      }\n      return f;\n    }, false);\n    return f;\n  }\n\n  // 全cellに対して実行する汎用集約関数\n  reduce(callback, initialValue) {\n    let result = initialValue;\n    for (let j = 0; j < this.rows; j++) {\n      for (let i = 0; i < this.cols; i++) {\n        const cell = this.getAt(i, j);\n        result = callback(result, cell);\n      }\n    }\n    return result;\n  }\n\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./table.js\n// module id = 1\n// module chunks = 0","// defaultでexportすることで、名前はimport側でつける\nexport default class {\n    constructor(isBomb, isOpen, isFlagged) {\n    this.isBomb = isBomb;\n    this.isOpen = isOpen;\n    this.isFlagged = isFlagged;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./cell.js\n// module id = 2\n// module chunks = 0","export default class {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.defineInputListeners();\n    this.startInputListeners();\n  }\n\n  setCanvasSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.canvas.style.width = width + \"px\";\n    this.canvas.style.height = height + \"px\";\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  setTable(table) {\n    this.table = table;\n  }\n\n  setActionListener(callback) {\n    this.actionListener = callback;\n  }\n\n  // マウスクリック時のcallback\n  defineInputListeners() {\n\n    // 左クリック\n    this.clicked = (e) => {\n      const [i, j] = this.getPosition(e.layerX, e.layerY);\n      if (i != null && j != null) {\n        this.actionListener(\"clicked\", [i, j]);\n      }\n    };\n\n    // 右クリック\n    this.contextmenu = (e) => {\n      e.preventDefault(); // 右クリック時のdefault動作をキャンセルする\n      const [i, j] = this.getPosition(e.layerX, e.layerY);\n      if (i != null && j != null) {\n        this.actionListener(\"rightClicked\", [i, j]);\n      }\n    };\n  }\n\n  // マウスイベント取得開始\n  startInputListeners() {\n    this.isListening = true;\n    this.canvas.addEventListener(\"click\", this.clicked, false);\n    this.canvas.addEventListener(\"contextmenu\", this.contextmenu, false);\n  }\n\n  // マウスイベント取得停止\n  stopInputListeners() {\n    this.canvas.removeEventListener(\"click\", this.clicked, false);\n    this.canvas.removeEventListener(\"contextmenu\", this.contextmenu, false);\n    this.isListening = false;\n  }\n\n  // 座標から、マス位置を取得\n  getPosition(x, y) {\n    if (this.table == null) {\n      return [null, null];\n    }\n\n    const cellWidth = this.width / this.table.cols;\n    const cellHeight = this.height / this.table.rows;\n    let i = Math.floor(x / cellWidth);\n    let j = Math.floor(y / cellHeight);\n    if (i >= this.table.cols) {\n      i = null;\n    }\n    if (j >= this.table.rows) {\n      j = null;\n    }\n    return [i, j];\n\n    // let ii = null;\n    // let jj = null;\n    // const table = this.table;\n    // const cols = this.table.cols;\n    // const rows = this.table.rows;\n    // for (let j = 0; j < rows; j++) {\n    //   for (let i = 0; i < cols; i++) {\n    //     if (this.width / cols * i <= x && this.height / rows * j <= y && x < this.width / cols * (i + 1) && y < this.height / rows * (j + 1)) {\n    //       ii = i;\n    //       jj = j;\n    //       break;\n    //     }\n    //   }\n    // }\n    // return [ii, jj];\n  }\n\n  // 描画\n  paint() {\n    if (this.table == null) {\n      return;\n    }\n\n    for (let j = 0; j < this.table.rows; j++) {\n      for (let i = 0; i < this.table.cols; i++) {\n        const cell = this.table.getAt(i, j);\n        this.paintCell(cell, i, j);\n      }\n    }\n  }\n\n  // Cell 1個の描画\n  paintCell(cell, i, j) {\n    const ctx = this.context;\n    const cellWidth = this.width / this.table.cols;\n    const cellHeight = this.height / this.table.rows;\n    const left = cellWidth * i;\n    const top = cellHeight * j;\n    const fontSize = Math.ceil(Math.min(cellWidth, cellHeight) * 0.8);\n    let fill, stroke;\n    let text = null;\n\n    if (cell.isOpen) {\n      fill = \"rgb(255,200,200)\";\n      stroke = \"rgb(0,0,255)\";\n      if (cell.isBomb) {\n        text = \"\\u2620\";\n      } else {\n        const n = this.table.countNeighborBombs(i, j);\n        if (n > 0) {\n          text = n;\n        }\n      }\n    } else {\n      fill = \"rgb(255,255,255)\";\n      stroke = \"rgb(0,0,255)\";\n      if (cell.isFlagged) {\n        text = \"\\u2713\";\n      }\n    }\n\n    // マス描画\n    ctx.fillStyle = fill;\n    ctx.fillRect(left, top, cellWidth, cellHeight);\n    ctx.StrokeStyle = stroke;\n    ctx.strokeRect(left, top, cellWidth, cellHeight);\n\n    // text描画\n    if (text != null) {\n      ctx.fillStyle = \"rgb(50,50,50)\";\n      ctx.font = `$(fontSize)px Times New Roman`;\n      ctx.textAligh = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(text, left + (cellWidth / 2), top + (cellHeight / 2));\n    }\n\n  }\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel.js\n// module id = 3\n// module chunks = 0","export const PANEL_WIDTH = 360;\nexport const PANEL_HEIGHT = 300;\nexport const TABLE_COLS = 12;\nexport const TABLE_ROWS = 10;\nexport const NUM_BOMBS = 8;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./value.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}